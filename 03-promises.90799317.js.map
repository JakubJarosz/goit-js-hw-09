{"mappings":"AAKAA,eAAeC,EAAcC,EAAUC,GACrC,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,WAAWN,KAEnBO,EAAO,SAASP,OAEjBC,MAdMQ,SAASC,cAAc,QAG/BC,iBAAiB,UActBb,eAA4Bc,GAC1BA,EAAMC,iBACN,MACEC,UAAUb,MAAEA,EAAKc,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAOG,MAAOD,UAC3BnB,EAAcmB,EAAQ,GAALA,EAASjB,EAAMkB,MAAQJ,EAAKI,OAChDC,MAAKC,IACJC,QAAQC,IAAIF,MAEbG,OAAMC,IACLH,QAAQC,IAAIE","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form');\n\n\nform.addEventListener('submit', handleSubmit);\n\nasync function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`SUCECSS ${position}`);\n      } else {\n        reject(`ERROR ${position}`);\n      }\n    }, delay);\n  });\n}\nasync function handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  for (let i = 1; i <= amount.value; i++) {\n    await createPromise(i, i == 1 ? delay.value : step.value)\n      .then(x => {\n        console.log(x);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n}\n"],"names":["async","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","i","value","then","x","console","log","catch","err"],"version":3,"file":"03-promises.90799317.js.map"}